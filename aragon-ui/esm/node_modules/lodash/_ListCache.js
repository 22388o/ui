import _listCacheClear$1 from './_listCacheClear.js';
import _listCacheDelete$1 from './_listCacheDelete.js';
import _listCacheGet$1 from './_listCacheGet.js';
import _listCacheHas$1 from './_listCacheHas.js';
import _listCacheSet$1 from './_listCacheSet.js';

/**
 * Creates an list cache object.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */
function ListCache(entries) {
  var index = -1,
      length = entries == null ? 0 : entries.length;

  this.clear();
  while (++index < length) {
    var entry = entries[index];
    this.set(entry[0], entry[1]);
  }
}

// Add methods to `ListCache`.
ListCache.prototype.clear = _listCacheClear$1;
ListCache.prototype['delete'] = _listCacheDelete$1;
ListCache.prototype.get = _listCacheGet$1;
ListCache.prototype.has = _listCacheHas$1;
ListCache.prototype.set = _listCacheSet$1;

var _ListCache = ListCache;

export default _ListCache;
export { _ListCache as __moduleExports };
//# sourceMappingURL=_ListCache.js.map

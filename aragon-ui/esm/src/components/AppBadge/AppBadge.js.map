{"version":3,"file":"AppBadge.js","sources":["../../../../../src/components/AppBadge/AppBadge.js"],"sourcesContent":["import React, { useCallback, useRef, useState } from 'react'\nimport PropTypes from 'prop-types'\nimport { ImageExists } from '../../hooks'\nimport { GU, RADIUS } from '../../style'\nimport { isAddress, warn } from '../../utils'\nimport BadgeBase from '../BadgeBase/BadgeBase'\nimport BadgePopoverActionType from '../BadgeBase/BadgePopoverActionType'\nimport Tag from '../Tag/Tag'\nimport AppBadgePopover from './AppBadgePopover'\nimport iconDefaultSvg from './assets/app-default.svg'\n\nconst AppBadge = React.memo(function AppBadge({\n  appAddress,\n  badgeOnly,\n  compact,\n  iconSrc,\n  identifier,\n  label,\n  labelStyle,\n  networkType,\n  popoverAction,\n  popoverTitle,\n  ...props\n}) {\n  const badgeRef = useRef(null)\n  const [opened, setOpened] = useState(false)\n  const handleClose = useCallback(() => setOpened(false), [])\n  const handleOpen = useCallback(() => setOpened(true), [])\n\n  const isValidAddress = isAddress(appAddress)\n  if (!badgeOnly && !isValidAddress) {\n    warn(`AppBadge: provided invalid app address (${appAddress})`)\n  }\n\n  popoverTitle = popoverTitle || (\n    <div\n      css={`\n        display: grid;\n        align-items: center;\n        grid-template-columns: auto 1fr;\n      `}\n    >\n      <span\n        css={`\n          display: inline-block;\n          overflow: hidden;\n          text-overflow: ellipsis;\n          white-space: nowrap;\n        `}\n      >\n        {label}\n      </span>\n      {identifier && (\n        <Tag\n          mode=\"identifier\"\n          css={`\n            margin-left: ${1 * GU}px;\n          `}\n        >\n          {identifier}\n        </Tag>\n      )}\n    </div>\n  )\n\n  return (\n    <BadgeBase\n      badgeRef={badgeRef}\n      compact={compact}\n      disabled={badgeOnly}\n      icon={\n        <ImageExists src={iconSrc}>\n          {({ displayFallback, exists }) => (\n            <Icon compact={compact} src={exists ? iconSrc : iconDefaultSvg} />\n          )}\n        </ImageExists>\n      }\n      label={label}\n      labelStyle={labelStyle}\n      onClick={isValidAddress ? handleOpen : undefined}\n      title={appAddress}\n    >\n      {popoverDisabled =>\n        !popoverDisabled &&\n        appAddress && (\n          <AppBadgePopover\n            appAddress={appAddress}\n            iconFallbackSrc={iconDefaultSvg}\n            iconSrc={iconSrc}\n            networkType={networkType}\n            onClose={handleClose}\n            opener={badgeRef.current}\n            popoverAction={popoverAction}\n            title={popoverTitle}\n            visible={opened}\n          />\n        )\n      }\n    </BadgeBase>\n  )\n})\nAppBadge.propTypes = {\n  appAddress: PropTypes.string,\n  badgeOnly: PropTypes.bool,\n  compact: PropTypes.bool,\n  iconSrc: PropTypes.string,\n  identifier: PropTypes.string,\n  label: PropTypes.string.isRequired,\n  labelStyle: PropTypes.string,\n  networkType: PropTypes.string,\n  popoverAction: BadgePopoverActionType,\n  popoverTitle: PropTypes.node,\n}\n\nconst Icon = ({ compact, src, ...props }) => {\n  const size = (compact ? 2.25 : 3) * GU\n  return (\n    <span\n      css={`\n        flex-shrink: 0;\n        width: ${size}px;\n        height: ${size}px;\n        margin-right: ${1 * GU}px;\n        border-radius: ${compact ? `${RADIUS}px` : 0};\n        background-size: contain;\n        background-position: 50% 50%;\n        background-repeat: no-repeat;\n        background-image: url(${src});\n      `}\n      {...props}\n    />\n  )\n}\nIcon.propTypes = {\n  compact: PropTypes.bool,\n  src: PropTypes.string.isRequired,\n}\n\nexport default AppBadge\n"],"names":["AppBadge","React","memo","appAddress","badgeOnly","compact","iconSrc","identifier","label","labelStyle","networkType","popoverAction","popoverTitle","props","badgeRef","useRef","useState","opened","setOpened","handleClose","useCallback","handleOpen","isValidAddress","isAddress","warn","GU","BadgeBase","displayFallback","exists","iconDefaultSvg","undefined","popoverDisabled","AppBadgePopover","current","propTypes","PropTypes","string","bool","isRequired","BadgePopoverActionType","node","Icon","src","size","RADIUS"],"mappings":"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"}